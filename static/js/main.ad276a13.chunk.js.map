{"version":3,"sources":["assets/earth-night.jpg","assets/night-sky.png","components/Chart.js","lib/utils.js","components/MapChart.js","lib/httpClient.js","components/Tab.js","components/Dialog.js","pages/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Chart","data","margin","top","right","bottom","left","xScale","type","yScale","min","max","stacked","reverse","curve","axisTop","axisRight","axisBottom","axisLeft","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","enableGridX","enableGridY","colors","scheme","lineWidth","enablePoints","pointColor","theme","pointBorderWidth","pointBorderColor","from","pointLabel","pointLabelYOffset","enableArea","useMesh","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground","sanitizeCountryNamesForCOVIDStats","countryName","sanitizeCountryNamesForFlightInfo","memo","countryData","renderChart","globeEl","useRef","useState","hoverD","setHoverD","features","countries","setCountries","useEffect","fetch","then","res","json","todaysData","undefined","length","ref","globeImageUrl","require","backgroundImageUrl","polygonsData","polygonAltitude","d","polygonCapColor","polygonSideColor","polygonStrokeColor","polygonLabel","properties","ADMIN","confirmed","deaths","recovered","onPolygonHover","onPolygonClick","polygonsTransitionDuration","getData","url","cancel","a","axios","cancelToken","token","results","isCancel","console","log","message","TabPanel","props","children","value","index","other","Typography","component","role","hidden","id","aria-labelledby","Box","p","useStyles","makeStyles","root","flexGrow","backgroundColor","palette","background","paper","CustomTab","tabTitles","tabContents","classes","React","setValue","className","AppBar","position","Tabs","onChange","event","newValue","aria-label","map","title","Tab","key","label","a11yProps","content","appBar","marginLeft","spacing","flex","Transition","forwardRef","Slide","CustomDialog","handleDialog","dialogContent","dialog","Dialog","scroll","fullScreen","open","onClose","TransitionComponent","Toolbar","IconButton","edge","color","onClick","process","REACT_APP_SCRAPER_URL","chart","height","flightInfo","progress","alignSelf","justifySelf","modal","transform","width","border","borderRadius","boxShadow","shadows","padding","outline","mobileModal","Home","loading","setLoading","bannedCountries","setBannedCountries","setCountryData","chartData","setChartData","setDialog","setDialogContent","CancelToken","source","fetchData","getDialogContent","name","push","Grid","variant","DialogContent","dividers","DialogContentText","tabIndex","CircularProgress","stat","x","y","createMuiTheme","primary","main","grey","secondary","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ad276a13.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/earth-night.5350543d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/night-sky.1701d635.png\";","/** @format */\nimport React from \"react\";\n\nimport { ResponsiveLine } from \"@nivo/line\";\n\nconst Chart = ({ data }) => {\n\treturn (\n\t\t<ResponsiveLine\n\t\t\tdata={data}\n\t\t\tmargin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n\t\t\txScale={{ type: \"point\" }}\n\t\t\tyScale={{\n\t\t\t\ttype: \"linear\",\n\t\t\t\tmin: \"auto\",\n\t\t\t\tmax: \"auto\",\n\t\t\t\tstacked: false,\n\t\t\t\treverse: false\n\t\t\t}}\n\t\t\tcurve='natural'\n\t\t\taxisTop={null}\n\t\t\taxisRight={null}\n\t\t\taxisBottom={null}\n\t\t\taxisLeft={{\n\t\t\t\torient: \"left\",\n\t\t\t\ttickSize: 5,\n\t\t\t\ttickPadding: 5,\n\t\t\t\ttickRotation: 0,\n\t\t\t\tlegend: \"count\",\n\t\t\t\tlegendOffset: -40,\n\t\t\t\tlegendPosition: \"middle\"\n\t\t\t}}\n\t\t\tenableGridX={false}\n\t\t\tenableGridY={false}\n\t\t\tcolors={{ scheme: \"nivo\" }}\n\t\t\tlineWidth={3}\n\t\t\tenablePoints={false}\n\t\t\tpointColor={{ theme: \"background\" }}\n\t\t\tpointBorderWidth={2}\n\t\t\tpointBorderColor={{ from: \"serieColor\" }}\n\t\t\tpointLabel='persons'\n\t\t\tpointLabelYOffset={-12}\n\t\t\tenableArea={true}\n\t\t\tuseMesh={true}\n\t\t\tlegends={[\n\t\t\t\t{\n\t\t\t\t\tanchor: \"bottom-right\",\n\t\t\t\t\tdirection: \"column\",\n\t\t\t\t\tjustify: false,\n\t\t\t\t\ttranslateX: 100,\n\t\t\t\t\ttranslateY: 0,\n\t\t\t\t\titemsSpacing: 0,\n\t\t\t\t\titemDirection: \"left-to-right\",\n\t\t\t\t\titemWidth: 80,\n\t\t\t\t\titemHeight: 20,\n\t\t\t\t\titemOpacity: 0.75,\n\t\t\t\t\tsymbolSize: 12,\n\t\t\t\t\tsymbolShape: \"circle\",\n\t\t\t\t\tsymbolBorderColor: \"rgba(0, 0, 0, .5)\",\n\t\t\t\t\teffects: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ton: \"hover\",\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\titemBackground: \"rgba(0, 0, 0, .03)\",\n\t\t\t\t\t\t\t\titemOpacity: 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]}\n\t\t/>\n\t);\n};\n\nexport default Chart;\n","/** @format */\n\nexport const sanitizeCountryNamesForCOVIDStats = countryName => {\n\tswitch (countryName) {\n\t\tcase \"Democratic Republic of the Congo\":\n\t\t\tcountryName = \"Congo (Kinshasa)\";\n\t\t\tbreak;\n\n\t\tcase \"Republic of Congo\":\n\t\t\tcountryName = \"Congo (Brazzaville)\";\n\t\t\tbreak;\n\n\t\tcase \"South Korea\":\n\t\t\tcountryName = \"Korea, South\";\n\t\t\tbreak;\n\n\t\tcase \"United States of America\":\n\t\t\tcountryName = \"US\";\n\t\t\tbreak;\n\n\t\tcase \"United Republic of Tanzania\":\n\t\t\tcountryName = \"Tanzania\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\treturn countryName;\n};\n\nexport const sanitizeCountryNamesForFlightInfo = countryName => {\n\tswitch (countryName) {\n\t\tcase \"United States of America\":\n\t\t\tcountryName = \"United States\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\treturn countryName;\n};\n","/** @format */\n\nimport React, { memo, useEffect, useRef, useState } from \"react\";\nimport Globe from \"react-globe.gl\";\nimport { sanitizeCountryNamesForCOVIDStats } from \"../lib/utils\";\n\nconst MapChart = ({ countryData, renderChart }) => {\n\tconst globeEl = useRef();\n\tconst [hoverD, setHoverD] = useState();\n\tconst [countries, setCountries] = useState({ features: [] });\n\n\tuseEffect(() => {\n\t\t//Get Country info\n\t\tfetch(\"./countries.json\")\n\t\t\t.then((res) => res.json())\n\t\t\t.then(setCountries);\n\t}, []);\n\n\tconst todaysData = (countryName) => {\n\t\tcountryName = sanitizeCountryNamesForCOVIDStats(countryName);\n\n\t\tif (countryData[countryName] !== undefined) {\n\t\t\treturn countryData[countryName][countryData[countryName].length - 1];\n\t\t} else {\n\t\t\treturn \"No info\";\n\t\t}\n\t};\n\n\tconst getPolygonLabel = (data) => {\n\t\tif (todaysData(data.ADMIN) === \"No info\") return \"No Info\";\n\t\telse\n\t\t\treturn `\n        <b>${data.ADMIN}</b> <br />\n        <strong>Confirmed: </strong> <i>${\n\t\t\t\t\ttodaysData(data.ADMIN).confirmed\n\t\t\t\t}</i><br/>\n\t\t<strong> Deaths: </strong> <i>${todaysData(data.ADMIN).deaths}</i><br/>\n\t\t<strong> Recovered: </strong> <i>${todaysData(data.ADMIN).recovered}</i><br/>\n      `;\n\t};\n\n\treturn (\n\t\t<Globe\n\t\t\tref={globeEl}\n\t\t\tglobeImageUrl={require(\"../assets/earth-night.jpg\")}\n\t\t\tbackgroundImageUrl={require(\"../assets/night-sky.png\")}\n\t\t\tpolygonsData={countries.features}\n\t\t\tpolygonAltitude={(d) => (d === hoverD ? 0.12 : 0.06)}\n\t\t\tpolygonCapColor={(d) => (d === hoverD ? \"green\" : \"black\")}\n\t\t\tpolygonSideColor={() => \"rgba(0, 100, 0, 0.15)\"}\n\t\t\tpolygonStrokeColor={() => \"#111\"}\n\t\t\tpolygonLabel={({ properties: d }) => getPolygonLabel(d)}\n\t\t\tonPolygonHover={setHoverD}\n\t\t\tonPolygonClick={({ properties: d }) => renderChart(d.ADMIN)}\n\t\t\tpolygonsTransitionDuration={300}\n\t\t/>\n\t);\n};\n\nexport default memo(MapChart);\n","/** @format */\n\nimport axios from \"axios\";\n\nexport const getData = async (url, cancel) => {\n\ttry {\n\t\tconst results = await axios(url, { cancelToken: cancel.token });\n\t\treturn results.data;\n\t} catch (error) {\n\t\tif (axios.isCancel(error)) {\n\t\t\t// Handle if request was cancelled\n\t\t\tconsole.log(\"Request canceled\", error.message);\n\t\t} else {\n\t\t\t// Handle usual errors\n\t\t\tconsole.log(\"Something went wrong: \", error.message);\n\t\t}\n\t}\n};\n","/** @format */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nfunction TabPanel(props) {\n\tconst { children, value, index, ...other } = props;\n\n\treturn (\n\t\t<Typography\n\t\t\tcomponent='div'\n\t\t\trole='tabpanel'\n\t\t\thidden={value !== index}\n\t\t\tid={`simple-tabpanel-${index}`}\n\t\t\taria-labelledby={`simple-tab-${index}`}\n\t\t\t{...other}>\n\t\t\t{value === index && <Box p={3}>{children}</Box>}\n\t\t</Typography>\n\t);\n}\n\nTabPanel.propTypes = {\n\tchildren: PropTypes.node,\n\tindex: PropTypes.any.isRequired,\n\tvalue: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n\treturn {\n\t\tid: `simple-tab-${index}`,\n\t\t\"aria-controls\": `simple-tabpanel-${index}`\n\t};\n}\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tflexGrow: 1,\n\t\tbackgroundColor: theme.palette.background.paper\n\t}\n}));\n\nconst CustomTab = ({ tabTitles, tabContents }) => {\n\tconst classes = useStyles();\n\tconst [value, setValue] = React.useState(0);\n\n\tconst handleChange = (event, newValue) => {\n\t\tsetValue(newValue);\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position='static'>\n\t\t\t\t<Tabs\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\taria-label='simple tabs example'>\n\t\t\t\t\t{tabTitles.map((title, index) => (\n\t\t\t\t\t\t<Tab key={index} label={title} {...a11yProps(index)} />\n\t\t\t\t\t))}\n\t\t\t\t</Tabs>\n\t\t\t</AppBar>\n\t\t\t{tabContents.map((content, index) => (\n\t\t\t\t<TabPanel key={index} value={value} index={index}>\n\t\t\t\t\t{content}\n\t\t\t\t</TabPanel>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default CustomTab;\n","/** @format */\n\nimport React from \"react\";\nimport {\n\tAppBar,\n\tDialog,\n\tIconButton,\n\tmakeStyles,\n\tSlide,\n\tToolbar,\n} from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles((theme) => ({\n\tappBar: {\n\t\tposition: \"relative\",\n\t},\n\ttitle: {\n\t\tmarginLeft: theme.spacing(2),\n\t\tflex: 1,\n\t},\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n\treturn <Slide direction='up' ref={ref} {...props} />;\n});\n\nconst CustomDialog = ({ handleDialog, dialogContent, dialog }) => {\n\tconst classes = useStyles();\n\treturn (\n\t\t<div>\n\t\t\t<Dialog\n\t\t\t\tscroll='paper'\n\t\t\t\tfullScreen\n\t\t\t\topen={dialog}\n\t\t\t\tonClose={() => handleDialog(false)}\n\t\t\t\tTransitionComponent={Transition}>\n\t\t\t\t<AppBar className={classes.appBar}>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tedge='start'\n\t\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\t\tonClick={() => handleDialog(false)}\n\t\t\t\t\t\t\taria-label='close'>\n\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t{dialogContent}\n\t\t\t</Dialog>\n\t\t</div>\n\t);\n};\n\nexport default CustomDialog;\n","/** @format */\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport {\n\tCircularProgress,\n\tmakeStyles,\n\tTypography,\n\tGrid,\n\tDialogContent,\n\tDialogContentText,\n} from \"@material-ui/core\";\n\nimport Chart from \"../components/Chart\";\nimport GlobeChart from \"../components/MapChart\";\n\nimport { getData } from \"../lib/httpClient\";\nimport CustomTab from \"../components/Tab\";\nimport CustomDialog from \"../components/Dialog\";\nimport {\n\tsanitizeCountryNamesForFlightInfo,\n\tsanitizeCountryNamesForCOVIDStats,\n} from \"../lib/utils\";\n\nconst url = `${process.env.REACT_APP_SCRAPER_URL}`;\nconst pomberUrl = \"https://pomber.github.io/covid19/timeseries.json\";\n\nconst useStyles = makeStyles((theme) => ({\n\tchart: {\n\t\tflexGrow: 1,\n\t\theight: 400,\n\t},\n\tflightInfo: {\n\t\tflexGrow: 1,\n\t\theight: 100,\n\t},\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tprogress: {\n\t\talignSelf: \"center\",\n\t\tjustifySelf: \"center\",\n\t\tmargin: theme.spacing(2),\n\t},\n\tmodal: {\n\t\ttop: \"50%\",\n\t\tleft: \"50%\",\n\t\ttransform: \"translate(-50%, -50%)\",\n\t\tposition: \"absolute\",\n\t\theight: 500,\n\t\twidth: 800,\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tborder: \"2px solid #FFF\",\n\t\tborderRadius: 10,\n\t\tboxShadow: theme.shadows[5],\n\t\tpadding: theme.spacing(2, 4, 3),\n\t\toutline: \"none\",\n\t},\n\tmobileModal: {\n\t\ttop: \"25%\",\n\t\tleft: \"25%\",\n\t\ttransform: \"translate(-25%, -25%)\",\n\t\theight: 295,\n\t\twidth: 292,\n\t},\n}));\n\nconst Home = () => {\n\tconst classes = useStyles();\n\n\tconst [loading, setLoading] = useState(false);\n\n\tconst [bannedCountries, setBannedCountries] = useState(\"\");\n\tconst [countryData, setCountryData] = useState({});\n\n\tconst [chartData, setChartData] = useState([]);\n\tconst [dialog, setDialog] = useState(false);\n\tconst [dialogContent, setDialogContent] = useState({});\n\n\tuseEffect(() => {\n\t\tconst cancel = axios.CancelToken.source();\n\n\t\tconst fetchData = async () => {\n\t\t\tsetLoading(true);\n\n\t\t\tlet results = await getData(url, cancel);\n\t\t\tsetBannedCountries(results);\n\n\t\t\tresults = await getData(pomberUrl, cancel);\n\t\t\tsetCountryData(results);\n\n\t\t\tsetLoading(false);\n\t\t};\n\n\t\tfetchData();\n\n\t\treturn () => {\n\t\t\tcancel.cancel();\n\t\t};\n\t}, []);\n\n\tconst handleDialog = (value) => {\n\t\tsetDialog(value);\n\t};\n\n\tconst renderChart = (name) => {\n\t\tif (countryData[sanitizeCountryNamesForCOVIDStats(name)] !== undefined) {\n\t\t\tconst getData = (type) => {\n\t\t\t\treturn countryData[sanitizeCountryNamesForCOVIDStats(name)].map(\n\t\t\t\t\t(stat, index) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tx: `Day ${index}`,\n\t\t\t\t\t\t\ty: stat[type],\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tsetChartData([\n\t\t\t\t{\n\t\t\t\t\tid: \"Confirmed\",\n\t\t\t\t\tcolor: \"hsl(40, 50%, 45%)\",\n\t\t\t\t\tdata: getData(\"confirmed\"),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"Deaths\",\n\t\t\t\t\tcolor: \"hsl(0, 50%, 45%)\",\n\t\t\t\t\tdata: getData(\"deaths\"),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"Recovered\",\n\t\t\t\t\tcolor: \"hsl(83, 70%, 50%)\",\n\t\t\t\t\tdata: getData(\"recovered\"),\n\t\t\t\t},\n\t\t\t]);\n\t\t\tsetDialogContent(getDialogContent(name, chartData));\n\t\t\thandleDialog(true);\n\t\t}\n\t};\n\n\tconst getDialogContent = (name, chartData) => {\n\t\tconst tabTitles = [\"Flight Info\", \"Basic Stats\"];\n\t\tconst tabContents = [];\n\n\t\ttabContents.push(\n\t\t\t<Grid className={classes.flightInfo}>\n\t\t\t\t<Typography variant='h3'>{name}</Typography>\n\t\t\t\t<DialogContent dividers>\n\t\t\t\t\t<DialogContentText id='scroll-dialog-description' tabIndex={-1}>\n\t\t\t\t\t\t<Typography variant='body2'>\n\t\t\t\t\t\t\t{bannedCountries[sanitizeCountryNamesForFlightInfo(name)] ===\n\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t\t\t? \"No Flight Info\"\n\t\t\t\t\t\t\t\t: bannedCountries[sanitizeCountryNamesForFlightInfo(name)]}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</DialogContentText>\n\t\t\t\t</DialogContent>\n\t\t\t</Grid>\n\t\t);\n\n\t\ttabContents.push(\n\t\t\t<Grid className={classes.chart}>\n\t\t\t\t<Typography variant='h3'>{name}</Typography>\n\t\t\t\t<Chart data={chartData} />\n\t\t\t</Grid>\n\t\t);\n\n\t\treturn (\n\t\t\t<Grid>\n\t\t\t\t<CustomTab tabContents={tabContents} tabTitles={tabTitles} />\n\t\t\t</Grid>\n\t\t);\n\t};\n\n\tif (loading)\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<CircularProgress className={classes.progress} />\n\t\t\t</div>\n\t\t);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<div>\n\t\t\t\t<GlobeChart countryData={countryData} renderChart={renderChart} />\n\t\t\t\t<CustomDialog\n\t\t\t\t\thandleDialog={handleDialog}\n\t\t\t\t\tdialog={dialog}\n\t\t\t\t\tdialogContent={dialogContent}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","/** @format */\n\n//import React, { useState } from \"react\";\nimport React from \"react\";\nimport \"typeface-roboto\";\n\nimport {\n\tcreateMuiTheme,\n\t//makeStyles,\n\tThemeProvider\n} from \"@material-ui/core/styles\";\n\nimport { grey } from \"@material-ui/core/colors\";\nimport {\n\t//AppBar,\n\t// Button,\n\t// Box,\n\t// Hidden,\n\t// IconButton,\n\t// Toolbar,\n\t// Typography,\n\t// Grid\n} from \"@material-ui/core\";\n\n//import FileCopyIcon from \"@material-ui/icons/FileCopy\";\n\n// import FavoriteIcon from \"@material-ui/icons/Favorite\";\n// import GitHubIcon from \"@material-ui/icons/GitHub\";\n\n//import QRCode from \"qrcode.react\";\n\n// import CustomDrawer from \"./components/Drawer\";\n// import CustomModal from \"./components/Modal\";\nimport Home from \"./pages/home\";\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: grey[900]\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: grey[50]\n\t\t}\n\t}\n});\n\n/* const useStyles = makeStyles(theme => ({\n\taddressText: {\n\t\ttextAlign: \"center\",\n\t\tmarginTop: 15,\n\t\t[theme.breakpoints.down(\"md\")]: {\n\t\t\tflexWrap: \"wrap\",\n\t\t\tfontSize: 10,\n\t\t\tmarginTop: 10\n\t\t}\n\t},\n\tmenuButton: {\n\t\tmarginRight: theme.spacing(2)\n\t},\n\ttitle: {\n\t\tflexGrow: 1\n\t}\n})); */\n\n//const BTCAddress = \"bc1qppv3awnvxw7kas3zne6jcwj2w8a5uehaz3mn6q\";\n//const ETHAddress = \"0x6ed31d002338349E486daD57939E1e4A4A7a0007\";\n\nconst App = () => {\n\t//const classes = useStyles();\n\n\t// const [drawerState, setDrawerState] = useState(false);\n\n\t// const [modal, setModal] = useState(false);\n\t// const [modalContent, setModalContent] = useState(null);\n\n\t//const [copied, setCopied] = useState(false);\n\n\t/* const copyToClipboard = value => {\n\t\tnavigator.clipboard.writeText(value);\n\t\tsetCopied(true);\n\t}; */\n\n/* \tconst sendViaQR = type => {\n\t\tlet address = \"\";\n\t\tif (type === \"Bitcoin\") {\n\t\t\taddress = BTCAddress;\n\t\t} else {\n\t\t\taddress = ETHAddress;\n\t\t}\n\n\t\tsetModalContent(\n\t\t\t<Grid container spacing={4} justify='center' alignContent='center'>\n\t\t\t\t<Grid item alignItems='center' justify='center'>\n\t\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\t\tScan this QR Code with your <strong> {type}</strong> wallet\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t\t<Box justifyContent='center' alignItems='center' display='flex'>\n\t\t\t\t\t<QRCode value={address} size={256} />\n\t\t\t\t</Box>\n\t\t\t\t<Button\n\t\t\t\t\tstartIcon={<FileCopyIcon />}\n\t\t\t\t\tonClick={() => copyToClipboard(address)}\n\t\t\t\t/>\n\t\t\t\t<Typography className={classes.addressText}>\n\t\t\t\t\t{copied ? \"Copied!\" : `Or Copy this Address: ${address}`}\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t);\n\t\thandleModal(true);\n\t}; */\n\n/* \tconst handleModal = value => {\n\t\tsetModal(value);\n\t};\n\n\tconst toggleDrawer = value => event => {\n\t\tif (\n\t\t\tevent.type === \"keydown\" &&\n\t\t\t(event.key === \"Tab\" || event.key === \"Shift\")\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t\tsetDrawerState(value);\n\t}; */\n\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t\n\t\t\t<Home />\n\t\t\t\n\t\t</ThemeProvider>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}